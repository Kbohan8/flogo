<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FaaS on Project Flogo - Docs and Tutorials</title>
    <link>https://tibcosoftware.github.io/flogo/faas/</link>
    <description>Recent content in FaaS on Project Flogo - Docs and Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://tibcosoftware.github.io/flogo/faas/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flogo and Lambda</title>
      <link>https://tibcosoftware.github.io/flogo/faas/how-to/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/faas/how-to/</guid>
      <description>Embrace serverless computing with Flogo&amp;rsquo;s first class support for AWS Lambda. Infinitely scale Flogo&amp;rsquo;s ultralight functions and scale back to zero when not in use with AWS Lambda&amp;rsquo;s NoOps and seamless scaling capabilities.
We&amp;rsquo;ll guide you through the set of steps required to build the most basic of functions for deployment to AWS Lambda. The flow you&amp;rsquo;ll build will be the function you deploy.</description>
    </item>
    
    <item>
      <title>Deploying Flogo apps with Serverless</title>
      <link>https://tibcosoftware.github.io/flogo/faas/serverless/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/faas/serverless/</guid>
      <description>You can deploy your Flogo apps to, for example, AWS Lambda using the Serverless Framework.With the Serverless Framework, you can configure which events should trigger it, where to deploy it and what kind of resources it is allowed to use without going into the AWS console.
Prerequisites In this tutorial, we’ll walk you through deploying your Flogo app to AWS Lambda using Serverless.
You’ll need to have: 1. an app built for AWS Lambda 1.</description>
    </item>
    
  </channel>
</rss>